{"version":3,"sources":["components/footer/Footer.module.css","components/main-content/MainContent.module.css","components/main-content/messages/Messages.module.css","components/main-content/gallery/Gallery.module.css","components/main-content/feed/Feed.module.css","components/main-content/feed/post/Post.module.css","components/global/btn/Btn.module.css","components/main-content/feed/postItems/postItem.module.css","components/main-content/users/Users.module.css","components/common/preloader.module.css","components/main-content/profile/Profile.module.css","components/aside/Aside.module.css","components/header/Header.module.css","components/footer/footer.jsx","components/left-sidebar/left-sidebar.jsx","components/common/FormsControls/FormsControls.jsx","components/main-content/messages/dialogsItems/dialogsItem/dialogsItem.jsx","utils/validators/validators.js","components/main-content/messages/dialogsItems/dialogsItems.jsx","redux/reducers/messageReducer.js","hoc/withAuthRedirect.js","components/main-content/messages/dialogsItems/dialogsItemsContainer.jsx","components/main-content/messages/messages.jsx","components/main-content/gallery/gallery.jsx","components/global/btn/btn.jsx","components/global/textarea/textarea.jsx","components/main-content/feed/post/post.jsx","components/main-content/feed/feed.jsx","api/api.js","utils/objects-helpers.js","redux/reducers/usersReducer.js","components/common/paginator/paginator.jsx","assets/image/user-image.jpg","components/main-content/users/user.jsx","components/main-content/users/users.jsx","assets/image/animated-loading.png","components/common/preloader.jsx","redux/reducers/users-selectors.js","components/main-content/users/usersContainer.jsx","components/main-content/profile/myPosts/myPost/myPost.jsx","components/main-content/profile/myPosts/myPosts.jsx","redux/reducers/profileReducer.js","components/main-content/profile/myPosts/myPostsContainer.jsx","components/main-content/profile/profileInfo/ProfileStatusH.jsx","components/main-content/profile/profileInfo/profileInfo.jsx","components/main-content/profile/profile.jsx","components/main-content/profile/profileContainer.jsx","redux/reducers/auth-reducer.js","components/main-content/login/login.jsx","components/main-content/main-content.jsx","components/aside/aside.jsx","components/header/header.jsx","components/header/headerContainer.jsx","redux/reducers/app-reducer.js","App.js","reportWebVitals.js","redux/reducers/feedReducer.js","redux/redux-store.js","index.js","components/common/FormsControls/FormsControls.module.css","components/left-sidebar/LeftSidebar.module.css","components/global/textarea/Textarea.module.css","components/common/paginator/paginator.module.css","components/main-content/users/User.module.css"],"names":["module","exports","Footer","className","classes","footer","LeftSidebar","left_sidebar","nav","to","Textarea","input","meta","props","hasError","touched","error","styles","formsControls","Input","DialogsItem","dialogtext","required","value","maxLenthCreator","maxLength","length","maxLenth50","DialogsItemsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","name","DialogsItems","DialogMessageData","dialogItemsText","map","postMessage","id","values","addMessage","newMessageText","ADD_MESSAGE","initialState","dialogsParticipantsList","messageReducer","state","action","type","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","messagesPage","dispatch","addMesssageActionCreator","Messages","store","Gallery","Btn","style","button","text","textarea","post_text","placeholder","rows","Post","post_wrapper","Feed","feed_wrapper","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objPropName","newObjProps","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setUsers","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","useState","portionNumber","setPortionNumber","portionCount","leftPortionPageNumber","rightPortionPageNumber","pages","i","push","console","log","countWrapper","onClick","e","p","selectedPage","User","user","wrapper","src","photos","small","userPhoto","alt","img","disabled","some","Users","Preloader","preloader","selectUsers","usersPage","selectPageSize","selectTotalUsersCount","selectCurrentPage","selectIsFetching","selectFollowingInProgress","UsersContainer","pageNumber","bind","page","totalCount","MyPost","Message","maxLength10","MyPosts","memo","PostMessageData","PostMessage","postText","MyPostsReduxForm","addPost","newPostText","ADD_POST","SET_USER_PROFILE","SET_STATUS","profile","setUserProfile","setStatus","profileReducer","MyPostsContainer","profilePage","addPostActionCreator","ProfileStatusH","editMode","setEditMode","useEffect","onDoubleClick","autoFocus","onBlur","onChange","currentTarget","ProfileInfo","large","Profile","ProfileContainer","match","params","authorizedUserId","getUserProfile","withRouter","SET_USER_DATA","login","setAuthUserData","getAuthUserData","authReducer","LoginReduxForm","summaryError","message","messages","stopSubmit","_error","formData","MainContent","main_content","path","render","Aside","aside","Header","header","logout","HeaderContainer","INITIALIZED_SUCCESS","initialized","appReducer","App","initializeApp","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","1","feedReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducers","combineReducers","feedPage","formReducer","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.39351c2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3Fuma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_content\":\"MainContent_main_content__2zLCQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__1scax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Gallery\":\"Gallery_Gallery__2Ypa5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed_wrapper\":\"Feed_feed_wrapper__3GS92\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_wrapper\":\"Post_post_wrapper__3FOda\",\"post_text\":\"Post_post_text__2u4OS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Btn_button__1SifX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_post\":\"postItem_my_post__j7C0l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__2990E\",\"img\":\"Users_img__r4XKP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__SGpEj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__2jCFw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"Aside_aside__SwGdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__VuXe0\"};","import React from 'react';\r\nimport classes from './Footer.module.css';\r\n\r\n\r\nconst Footer = () => {\r\n   return (\r\n      <footer className={classes.footer}>\r\n         Footer\r\n      </footer>\r\n   )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport classes from './LeftSidebar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst LeftSidebar = () => {\r\n   return (\r\n      <div className={classes.left_sidebar}>\r\n         <nav className={classes.nav}>\r\n            <NavLink to=\"/profile\">Profile</NavLink>\r\n            <NavLink to=\"/messages\">Messages</NavLink>\r\n            <NavLink to=\"/gallery\">Gallery</NavLink>\r\n            <NavLink to=\"/feed\">Feed</NavLink>\r\n            <NavLink to=\"/users\">Users</NavLink>\r\n         </nav>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default LeftSidebar;","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div className={styles.formsControls + \" \" + (hasError ? styles.error : \"\")}>\r\n         <div>\r\n            <textarea {...input} {...props} />\r\n         </div>\r\n         { hasError && <span>{meta.error}</span>}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n      <div className={styles.formsControls + \" \" + (hasError ? styles.error : \"\")}>\r\n         <div>\r\n            <input {...input} {...props} />\r\n         </div>\r\n         { hasError && <span>{meta.error}</span>}\r\n      </div>\r\n   )\r\n}","import React from 'react';\r\n// import classes from './DialogsItem.module.css';\r\n\r\n\r\nconst DialogsItem = (props) => {\r\n   return (\r\n      <div>\r\n         <span>{props.dialogtext}</span>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default DialogsItem;","export const required = value => {\r\n   if (value) return undefined;\r\n   return \"Field is required\";\r\n}\r\n\r\nexport const maxLenthCreator = (maxLength) => (value) => {\r\n   if (value && value.length > maxLength) return `Max length ${maxLength} symbols`;\r\n   return undefined;\r\n}\r\n","import React from 'react';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport DialogsItem from './dialogsItem/dialogsItem';\r\nimport { maxLenthCreator, required } from '../../../../utils/validators/validators';\r\n// import classes from './DialogsItem.module.css';\r\n\r\nconst DialogsItems = (props) => {\r\n\r\n   let DialogMessageData = props.dialogItemsText\r\n      .map(postMessage => <DialogsItem dialogtext={postMessage.dialogtext} id={postMessage.id} />)\r\n\r\n   let addNewMessage = (values) => {\r\n      props.addMessage(values.newMessageText);\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <div>Messages</div>\r\n         {DialogMessageData}\r\n         <DialogsItemsReduxForm onSubmit={addNewMessage} />\r\n      </div>\r\n   )\r\n}\r\n\r\nconst maxLenth50 = maxLenthCreator(50);\r\n\r\nconst DialogsItemsForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field component={Textarea}\r\n               validate={[required, maxLenth50]}\r\n               name=\"newMessageText\" />\r\n         </div>\r\n         <div>\r\n            <button> Add message </button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\nconst DialogsItemsReduxForm = reduxForm({ form: \"dialogItems\" })(DialogsItemsForm);\r\n\r\nexport default DialogsItems;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n   dialogsParticipantsList: [\r\n      { id: 1, name: 'Dmitriy' },\r\n      { id: 2, name: 'Yuna' },\r\n      { id: 3, name: 'Andrey' },\r\n      { id: 4, name: 'Vasia' }\r\n   ],\r\n   dialogItemsText: [\r\n      { id: 1, dialogtext: 'hi' },\r\n      { id: 2, dialogtext: 'test' },\r\n      { id: 3, dialogtext: '123' },\r\n   ]\r\n}\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case ADD_MESSAGE:\r\n         return {\r\n            ...state,\r\n            dialogItemsText: [...state.dialogItemsText, { id: 4, dialogtext: action.newMessageText }]\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n}\r\nexport const addMesssageActionCreator = (newMessageText) => ({ type: ADD_MESSAGE, newMessageText })\r\n\r\nexport default messageReducer;","import React from \"react\";\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render() {\r\n         if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n\r\n         return <Component {...this.props} />\r\n      }\r\n   }\r\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n   return ConnectedAuthRedirectComponent;\r\n}","// import React from 'react';\r\nimport DialogsItems from './dialogsItems';\r\nimport { connect } from \"react-redux\";\r\nimport { addMesssageActionCreator } from '../../../../redux/reducers/messageReducer';\r\n\r\nimport { withAuthRedirect } from '../../../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n// const DialogsItemsContainer = (props) => {\r\n//    let state = props.store.getState();\r\n\r\n//    let addMessage = () => {\r\n//       props.store.dispatch(addMesssageActionCreator())\r\n//    }\r\n\r\n//    let onMessageChange = (newMessage) => {\r\n//       props.store.dispatch(updateNewMessageTextActionCreator(newMessage));\r\n//    }\r\n\r\n//    return (\r\n//       <DialogsItems\r\n//          updateNewMessageText={onMessageChange}\r\n//          addMessage={addMessage}\r\n\r\n//          dialogItemsText={state.messagesPage.dialogItemsText}\r\n//          newMessageText={state.messagesPage.newMessageText}\r\n//       />\r\n\r\n//    );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      newMessageText: state.messagesPage.newMessageText,  //wil be rerender when <-  obj(newMessageText) changed. It's connect function\r\n      dialogItemsText: state.messagesPage.dialogItemsText,\r\n\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addMessage: (newMessageText) => {\r\n         dispatch(addMesssageActionCreator(newMessageText));\r\n      }\r\n   }\r\n}\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, mapDispatchToProps),\r\n   withAuthRedirect\r\n)(DialogsItems);\r\n\r\n","import React from 'react';\r\nimport classes from './Messages.module.css';\r\n// import Dialogs from './dialogs/dialogs.jsx';\r\n// import DialogsItems from './dialogsItems/dialogsItems.jsx';\r\nimport DialogsItemsContainer from './dialogsItems/dialogsItemsContainer';\r\n\r\nconst Messages = (props) => {\r\n   return (\r\n      <div className={classes.Messages}>\r\n         {/* <Dialogs dialogsParticipantsList={props.messagesPage.dialogsParticipantsList} /> */}\r\n         <DialogsItemsContainer\r\n            store={props.store} />\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport classes from './Gallery.module.css';\r\n\r\nconst Gallery = () => {\r\n   return (\r\n      <p className={classes.Gallery}>Gallery</p>\r\n   )\r\n}\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport style from './Btn.module.css';\r\n\r\n\r\nconst Btn = (props) => {\r\n   return (\r\n      <div>\r\n         <div className={style.button}>\r\n            <span>{props.text}</span>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Btn;","import React from 'react';\r\nimport style from './Textarea.module.css';\r\n\r\nconst Textarea = (props) => {\r\n   return (\r\n      <div className={style.textarea}>\r\n         <textarea\r\n            className={style.post_text}\r\n            placeholder='some text1'\r\n            rows='3'\r\n         >\r\n\r\n         </textarea>\r\n         <span></span>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default Textarea;","import React from 'react';\r\nimport style from './Post.module.css';\r\nimport Btn from '../../../global/btn/btn.jsx';\r\nimport Textarea from '../../../global/textarea/textarea.jsx';\r\n\r\nconst Post = (props) => {\r\n   return (\r\n      <div className={style.post_wrapper}>\r\n\r\n         <Textarea />\r\n         <Btn text='Post' />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport style from './Feed.module.css';\r\nimport Post from './post/post.jsx';\r\nimport postItem from './postItems/postItem.jsx';\r\n\r\nconst Feed = () => {\r\n   return (\r\n      <div className={style.feed_wrapper}>\r\n         <postItem />\r\n         <Post />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Feed;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n   withCredentials: true,\r\n   baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n   headers: {\r\n      \"API-KEY\": '7a54856f-2743-4411-acb4-8e65a28abcfb'\r\n   }\r\n});\r\n\r\nexport const usersAPI = {\r\n   getUsers(currentPage = 1, pageSize = 5) {\r\n      return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n         .then(response => {\r\n            return response.data;\r\n         });\r\n   },\r\n\r\n   follow(userId) {\r\n      return instance.post(`follow/${userId}`)\r\n\r\n   },\r\n\r\n   unfollow(userId) {\r\n      return instance.delete(`follow/${userId}`)\r\n\r\n   },\r\n\r\n   getProfile(userId) {\r\n      return profileAPI.getProfile(userId)\r\n   }\r\n\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n   getProfile(userId) {\r\n      return instance.get(`profile/${userId}`)\r\n   },\r\n   getStatus(userId) {\r\n      return instance.get(`profile/status/${userId}`)\r\n   },\r\n   updateStatus(status) {\r\n      return instance.put(`profile/status`, { status: status })\r\n   }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n   getMe() {\r\n      return instance.get(`auth/me`);\r\n   },\r\n   login(email, password, rememberMe = false) {\r\n      return instance.post(`auth/login`, { email, password, rememberMe });\r\n   },\r\n   logout() {\r\n      return instance.delete(`auth/login`);\r\n   }\r\n}","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n   return items.map(u => {\r\n      if (u[objPropName] === itemId) {\r\n         return { ...u, ...newObjProps }\r\n      }\r\n      return u;\r\n   })\r\n}\r\n\r\n","import { usersAPI } from '../../api/api.js';\r\nimport { updateObjectInArray } from '../../utils/objects-helpers.js';\r\n\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n   users: [],\r\n   pageSize: 5,\r\n   totalUsersCount: 0,\r\n   currentPage: 1,\r\n   isFetching: true,\r\n   followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case FOLLOW:\r\n         return {\r\n            ...state,\r\n            users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n         }\r\n\r\n      case UNFOLLOW:\r\n         return {\r\n            ...state,\r\n            users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n         }\r\n      case SET_USERS: {\r\n         return { ...state, users: action.users }\r\n      }\r\n      case SET_CURRENT_PAGE: {\r\n         return { ...state, currentPage: action.currentPage }\r\n      }\r\n      case SET_TOTAL_USERS_COUNT: {\r\n         return { ...state, totalUsersCount: action.totalUsersCount }\r\n      }\r\n      case TOGGLE_IS_FETCHING: {\r\n         return { ...state, isFetching: action.isFetching }\r\n      }\r\n      case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n         return {\r\n            ...state,\r\n            followingInProgress: action.isFetching\r\n               ? [...state.followingInProgress, action.userId]\r\n               : state.followingInProgress.filter(id => id !== action.userId)\r\n         }\r\n      }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n   return async (dispatch) => {\r\n      dispatch(toggleIsFetching(true));\r\n      dispatch(setCurrentPage(page));\r\n      let data = await usersAPI.getUsers(page, pageSize);\r\n      dispatch(toggleIsFetching(false));\r\n      dispatch(setUsers(data.items));\r\n      dispatch(setTotalUsersCount(data.totalCount));\r\n   }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n   dispatch(toggleFollowingProgress(true, userId));\r\n   let response = await apiMethod(userId);\r\n   if (response.data.resultCode === 0) {\r\n      dispatch(actionCreator(userId));\r\n   }\r\n   dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n   return async (dispatch) => {\r\n      followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n   }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n   return async (dispatch) => {\r\n      followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n   }\r\n}\r\n\r\nexport default usersReducer;","import React, { useState } from 'react';\r\nimport styles from './paginator.module.css';\r\n\r\nconst Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize }) => {\r\n\r\n   let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n   const [portionNumber, setPortionNumber] = useState(1);\r\n   let portionCount = totalItemsCount / portionSize;\r\n   let leftPortionPageNumber = (portionSize * portionNumber) - portionSize + 1;\r\n   let rightPortionPageNumber = portionSize * portionNumber;\r\n\r\n\r\n\r\n   let pages = [];\r\n   for (let i = 1; i <= pagesCount; i++) {\r\n      pages.push(i);\r\n   }\r\n\r\n   console.log(pages);\r\n   console.log(leftPortionPageNumber);\r\n   console.log(rightPortionPageNumber);\r\n\r\n   return (\r\n      <div className={styles.countWrapper}>\r\n         { portionNumber > 1 &&\r\n            <button onClick={(e) => { onPageChanged(rightPortionPageNumber); setPortionNumber(portionNumber - 1) }} >Prev</button>\r\n         }\r\n\r\n         {\r\n            pages\r\n               .filter(p => { return leftPortionPageNumber <= p && p <= rightPortionPageNumber })\r\n               .map((p) => {\r\n                  return <span\r\n                     key={pages.id}\r\n                     className={currentPage === p && styles.selectedPage}\r\n                     onClick={(e) => { onPageChanged(p) }}>{p}</span>\r\n               })\r\n         }\r\n\r\n         {\r\n            portionCount > portionNumber &&\r\n            <button onClick={(e) => { onPageChanged(leftPortionPageNumber); setPortionNumber(portionNumber + 1); }} >Next</button>\r\n         }\r\n      </div >\r\n   )\r\n}\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user-image.2df4a0be.jpg\";","import React from 'react';\r\nimport styles from './User.module.css';\r\nimport userPhoto from '../../../../src/assets/image/user-image.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n   return <div className={styles.wrapper}>\r\n      <span>\r\n         <div>\r\n            <NavLink to={'/profile/' + user.id}>\r\n               <img src={user.photos.small != null ? user.photos.small : userPhoto} alt=\"no \"\r\n                  className={styles.img} />\r\n            </NavLink>\r\n         </div>\r\n         <div>\r\n            {user.followed\r\n               ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => { unfollow(user.id) }}>Unfollow</button>\r\n               : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => { follow(user.id); }}>Follow</button>\r\n            }\r\n         </div>\r\n      </span>\r\n      <span>\r\n         <span>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n         </span>\r\n      </span>\r\n   </div>\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../../common/paginator/paginator.jsx';\r\nimport User from './user';\r\nimport styles from './Users.module.css';\r\n\r\nlet Users = ({ currentPage, totalUsersCount, pageSize, onPageChanged, ...props }) => {\r\n\r\n   return <div>\r\n      <Paginator currentPage={currentPage} pageSize={pageSize}\r\n         totalItemsCount={totalUsersCount} onPageChanged={onPageChanged} portionSize={10} />\r\n\r\n      {props.users.map(u => <User user={u}\r\n         followingInProgress={props.followingInProgress}\r\n         follow={props.follow}\r\n         unfollow={props.unfollow}\r\n         key={u.id}\r\n         className={styles.wrapper}\r\n      />\r\n      )\r\n      }\r\n\r\n   </div>\r\n}\r\n\r\n\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/animated-loading.1ea4c07b.png\";","import React from 'react';\r\nimport preloader from '../../assets/image/animated-loading.png';\r\nimport style from './preloader.module.css';\r\n\r\nlet Preloader = (props) => {\r\n   return <img className={style.preloader} src={preloader} alt='null'></img>\r\n}\r\n\r\nexport default Preloader;","\r\n\r\nexport const selectUsers = (state) => {\r\n   return state.usersPage.users;\r\n}\r\n\r\nexport const selectPageSize = (state) => {\r\n   return state.usersPage.pageSize;\r\n}\r\n\r\nexport const selectTotalUsersCount = (state) => {\r\n   return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const selectCurrentPage = (state) => {\r\n   return state.usersPage.currentPage;\r\n}\r\n\r\nexport const selectIsFetching = (state) => {\r\n   return state.usersPage.isFetching;\r\n}\r\n\r\nexport const selectFollowingInProgress = (state) => {\r\n   return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers } from '../../../redux/reducers/usersReducer';\r\n\r\nimport Users from './users';\r\nimport Preloader from '../../common/preloader';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { selectUsers, selectPageSize, selectTotalUsersCount, selectCurrentPage, selectIsFetching, selectFollowingInProgress } from '../../../redux/reducers/users-selectors';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n   componentDidMount() {\r\n      this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n   }\r\n\r\n   onPageChanged = (pageNumber) => {\r\n      this.props.getUsers(pageNumber, this.props.pageSize);\r\n      // this.props.setCurrentPage(pageNumber);\r\n      // this.props.toggleIsFetching(true);\r\n      // usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n      //    .then(data => {\r\n      //       this.props.toggleIsFetching(false);\r\n      //       this.props.setUsers(data.items);\r\n      //    });\r\n   }\r\n\r\n   render() {\r\n      return <>\r\n         {this.props.isFetching ? <Preloader /> : null}\r\n         <Users totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}\r\n            followingInProgress={this.props.followingInProgress}\r\n         />\r\n      </>\r\n   }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      users: selectUsers(state),\r\n      pageSize: selectPageSize(state),\r\n      totalUsersCount: selectTotalUsersCount(state),\r\n      currentPage: selectCurrentPage(state),\r\n      isFetching: selectIsFetching(state),\r\n      followingInProgress: selectFollowingInProgress(state)\r\n\r\n   }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//    return {\r\n//       follow: followActionCreator,\r\n//       unfollow: unfollowActionCreator,\r\n//       setUsers: setUsersActionCreator,\r\n//       setCurrentPage: setCurrentPageActionCreator,\r\n//       setTotalUsersCount: setTotalUsersCountActionCreator,\r\n//       toggleIsFetching: toggleIsFetchingActionCreator\r\n//    }\r\n// }\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n   withAuthRedirect,\r\n   connect(mapStateToProps, {\r\n      follow, unfollow, setCurrentPage,\r\n      toggleFollowingProgress, getUsers\r\n   })\r\n)(UsersContainer);\r\n\r\n","import React from 'react';\r\n// import classes from './MyPost.module.css';   \r\n\r\n\r\nconst MyPost = (props) => {\r\n\r\n   return (\r\n      <div>\r\n         <span>{props.Message}</span>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default MyPost;\r\n\r\n\r\n","import React from 'react';\r\nimport MyPost from './myPost/myPost.jsx';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLenthCreator } from \"../../../../utils/validators/validators\";\r\n// import classes from './MyPosts.module.css';\r\n\r\nconst maxLength10 = maxLenthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n   // console.log('render');\r\n   let PostMessageData = props.PostMessage.map(postText => <MyPost Message={postText.Message} id={postText.id} />);\r\n\r\n   const addNewPost = values => {\r\n      props.addPost(values.newPostText);\r\n   };\r\n\r\n   return <div>\r\n      MyPosts:\r\n         {PostMessageData}\r\n      <MyPostsReduxForm onSubmit={addNewPost} />\r\n   </div>;\r\n});\r\n\r\nconst MyPostsForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field component={Textarea} name=\"newPostText\"\r\n               validate={[required, maxLength10]} placeholder={\"Post message\"}\r\n            />\r\n         </div>\r\n         <div>\r\n            <button> Add Post</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({ form: 'myPosts' })(MyPostsForm)\r\n\r\nexport default MyPosts;","import { profileAPI, usersAPI } from \"../../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS'\r\n\r\nlet initialState = {\r\n   PostMessage: [\r\n      { id: 1, Message: 'hi' },\r\n      { id: 2, Message: 'someText' },\r\n      { id: 3, Message: 'yo' }\r\n   ],\r\n   profile: null,\r\n   status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case ADD_POST:\r\n         return {\r\n            ...state,\r\n            PostMessage: [...state.PostMessage, { id: 4, Message: action.newPostText }],\r\n         };\r\n      case SET_USER_PROFILE:\r\n         return {\r\n            ...state,\r\n            profile: action.profile\r\n         };\r\n      case SET_STATUS:\r\n         return {\r\n            ...state,\r\n            status: action.status\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const getUserProfile = (userId) => {\r\n   return async (dispatch) => {\r\n      let response = await usersAPI.getProfile(userId);\r\n      dispatch(setUserProfile(response.data));\r\n   }\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n   return async (dispatch) => {\r\n      let response = await profileAPI.getStatus(userId);\r\n      dispatch(setStatus(response.data));\r\n   }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n   return async (dispatch) => {\r\n      let response = await profileAPI.updateStatus(status);\r\n      if (response.data.resultCode === 0) {\r\n         dispatch(setStatus(status));\r\n      }\r\n   }\r\n}\r\n\r\nexport default profileReducer;","// import React from 'react';\r\nimport MyPosts from './myPosts';\r\nimport { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from '../../../../redux/reducers/profileReducer';\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n//    let state = props.store.getState();\r\n\r\n//    let addPost = () => {\r\n//       props.store.dispatch(addPostActionCreator());\r\n//    }\r\n\r\n//    let onPostChange = (newText) => {\r\n//       props.store.dispatch(updateNewPostTextActionCreator(newText));\r\n//    };\r\n\r\n//    return (\r\n//       <MyPosts\r\n//          updateNewPostText={onPostChange}\r\n//          addPost={addPost}\r\n\r\n//          PostMessage={state.profilePage.PostMessage}\r\n//          newPostText={state.profilePage.newPostText}\r\n//       />\r\n//    );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      PostMessage: state.profilePage.PostMessage,\r\n      newPostText: state.profilePage.newPostText\r\n   }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n   return {\r\n      addPost: (newPostText) => {\r\n         dispatch(addPostActionCreator(newPostText))\r\n      },\r\n\r\n   }\r\n\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst ProfileStatusH = (props) => {\r\n\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status)\r\n\r\n   useEffect(() => {\r\n      setStatus(props.status)\r\n   }, [props.status]);\r\n\r\n   const activateEditMode = () => {\r\n      setEditMode(true);\r\n   }\r\n   const deactivateEditMode = () => {\r\n      setEditMode(false);\r\n      props.updateStatus(status);\r\n   }\r\n   const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value);\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         {\r\n            !editMode &&\r\n            <div>\r\n               <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n            </div>\r\n         }\r\n         {\r\n            editMode &&\r\n            <div>\r\n               <input autoFocus={true} onBlur={deactivateEditMode}\r\n                  value={status} onChange={onStatusChange}\r\n               />\r\n            </div>\r\n         }\r\n      </div >\r\n   )\r\n}\r\n\r\nexport default ProfileStatusH;","import React from 'react';\r\nimport Preloader from '../../../common/preloader';\r\nimport ProfileStatusH from './ProfileStatusH';\r\n\r\nlet ProfileInfo = (props) => {\r\n\r\n   if (!props.profile) {\r\n      return <Preloader />\r\n   }\r\n\r\n\r\n   return (\r\n      <div>\r\n         <img src={props.profile.photos.large} alt=\"#\" />\r\n         <ProfileStatusH status={props.status} updateStatus={props.updateStatus} />\r\n      </div>\r\n   )\r\n\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\n\r\nimport MyPostsContainer from './myPosts/myPostsContainer';\r\nimport ProfileInfo from './profileInfo/profileInfo';\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n   return (\r\n\r\n      <div className={classes.Profile}>\r\n\r\n         <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n\r\n         <div>Content #1</div>\r\n         <MyPostsContainer\r\n         // store={props.store}\r\n         />\r\n\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../../redux/reducers/profileReducer';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n   componentDidMount() {\r\n\r\n      let userId = this.props.match.params.userId;\r\n\r\n      if (!userId) {\r\n         userId = this.props.authorizedUserId;\r\n\r\n      }\r\n      this.props.getUserProfile(userId);\r\n      this.props.getStatus(userId);\r\n\r\n   }\r\n   render() {\r\n      return (\r\n         <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n      )\r\n   }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n   profile: state.profilePage.profile,\r\n   status: state.profilePage.status,\r\n   authorizedUserId: state.auth.userId,\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n   withRouter,\r\n   withAuthRedirect\r\n)(ProfileContainer);","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n   userId: null,\r\n   email: null,\r\n   login: null,\r\n   isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case SET_USER_DATA:\r\n         return {\r\n            ...state,\r\n            ...action.data,\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, data: { userId, email, login, isAuth } })\r\nexport const getAuthUserData = () => {\r\n   return async (dispatch) => {\r\n      let response = await authAPI.getMe();\r\n      if (response.data.resultCode === 0) {\r\n         let { id, email, login } = response.data.data;\r\n         dispatch(setAuthUserData(id, email, login, true));\r\n      };\r\n   }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n   return async (dispatch) => {\r\n      let response = await authAPI.login(email, password, rememberMe);\r\n      if (response.data.resultCode === 0) {\r\n         dispatch(getAuthUserData())\r\n      } else {\r\n         let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n         dispatch(stopSubmit(\"login\", { _error: message }));\r\n      }\r\n   }\r\n}\r\n\r\nexport const logout = () => {\r\n   return async (dispatch) => {\r\n      let response = await authAPI.logout();\r\n      if (response.data.resultCode === 0) {\r\n         dispatch(setAuthUserData(null, null, null, false))\r\n      }\r\n   }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required } from '../../../utils/validators/validators';\r\nimport { Input } from '../../common/FormsControls/FormsControls';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { login } from '../../../redux/reducers/auth-reducer';\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst Login = (props) => {\r\n   const onSubmit = (formData) => {\r\n      props.login(formData.email, formData.password, formData.rememberMe)\r\n   }\r\n\r\n   if (props.isAuth) {\r\n      return <Redirect to={\"/profile\"} />\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <h1>Login</h1>\r\n         <LoginReduxForm onSubmit={onSubmit} />\r\n      </div>\r\n   )\r\n}\r\n\r\nconst LoginForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n            <Field component={Input}\r\n               placeholder={\"Email\"}\r\n               name={\"email\"}\r\n               validate={[required]}\r\n            />\r\n         </div>\r\n         <div>\r\n            <Field component={Input}\r\n               placeholder={\"Password\"}\r\n               name={\"password\"}\r\n               type={\"password\"}\r\n               validate={[required]}\r\n            />\r\n         </div>\r\n         <div>\r\n            <Field component={Input}\r\n               type={\"checkbox\"}\r\n               name={\"rememberMe\"} />Remember me\r\n         </div>\r\n\r\n         {props.error && <div className={style.summaryError} >\r\n            {props.error}\r\n         </div>}\r\n\r\n         <div>\r\n            <button>Login</button>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\r\nimport classes from './MainContent.module.css';\r\n\r\nimport Messages from './messages/messages.jsx';\r\nimport Gallery from './gallery/gallery.jsx';\r\nimport Feed from './feed/feed.jsx';\r\nimport UsersContainer from './users/usersContainer';\r\nimport { Route } from 'react-router-dom';\r\nimport ProfileContainer from './profile/profileContainer';\r\nimport LoginPage from './login/login';\r\n\r\nconst MainContent = (props) => {\r\n   return (\r\n\r\n      <div className={classes.main_content}>\r\n\r\n         <Route path=\"/login\" render={() => <LoginPage />} />\r\n\r\n         <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n         <Route path=\"/messages\" render={() => <Messages />} />\r\n         <Route path=\"/gallery\" component={Gallery} />\r\n         <Route path=\"/feed\" component={Feed} />\r\n\r\n         <Route path=\"/users\"\r\n            render={() => <UsersContainer />} />\r\n\r\n      </div>\r\n\r\n   );\r\n}\r\n\r\n\r\n\r\nexport default MainContent;\r\n","import React from 'react';\r\nimport classes from './Aside.module.css';\r\n\r\nconst Aside = () => {\r\n   return (\r\n      <div className={classes.aside}>\r\n         Aside\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Aside;","import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n   return (\r\n      <header className={classes.header}>\r\n         Header\r\n\r\n         {props.isAuth\r\n            ? <div>\r\n               <span>{props.login} - </span>\r\n               <button onClick={props.logout}>Logout</button>\r\n            </div>\r\n            : <NavLink to={'/login'}>login</NavLink>}\r\n\r\n\r\n      </header>\r\n   )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/reducers/auth-reducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n   render() {\r\n      return <Header {...this.props} />\r\n   }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.auth.isAuth,\r\n   login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nlet initialState = {\r\n   initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n   switch (action.type) {\r\n      case INITIALIZED_SUCCESS:\r\n         return {\r\n            ...state,\r\n            initialized: true\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n\r\n}\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\nexport const initializeApp = () => (dispatch) => {\r\n   let promise = dispatch(getAuthUserData());\r\n\r\n   promise.then(() => {\r\n      dispatch(initializedSuccess())\r\n   })\r\n\r\n\r\n}\r\n\r\nexport default appReducer;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Footer from './components/footer/footer.jsx'\r\nimport LeftSidebar from './components/left-sidebar/left-sidebar.jsx';\r\nimport MainContent from './components/main-content/main-content.jsx';\r\nimport Aside from './components/aside/aside.jsx';\r\nimport HeaderContainer from './components/header/headerContainer';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/reducers/app-reducer';\r\nimport Preloader from './components/common/preloader';\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n      <div className='main-wrapper'>\r\n        <HeaderContainer />\r\n        <LeftSidebar />\r\n        <MainContent />\r\n        <Aside />\r\n        <Footer />\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nexport default connect(mapStateToProps, { initializeApp })(App);\r\n//Routing 80 (compose+withrouter)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import store from \"../store\"\r\n\r\nlet initialState = { 1: 1 }\r\n\r\nexport let feedReducer = (state = initialState, action) => {\r\n\r\n   return state;\r\n}\r\nexport default feedReducer;","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport profileReducer from './reducers/profileReducer';\r\nimport messageReducer from './reducers/messageReducer';\r\nimport feedReducer from './reducers/feedReducer';\r\nimport usersReducer from \"./reducers/usersReducer\";\r\nimport authReducer from \"./reducers/auth-reducer\";\r\n\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./reducers/app-reducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nlet reducers = combineReducers({\r\n   profilePage: profileReducer,\r\n   messagesPage: messageReducer,\r\n   feedPage: feedReducer,\r\n   usersPage: usersReducer,\r\n   auth: authReducer,\r\n   form: formReducer,\r\n   app: appReducer\r\n});\r\n\r\nlet store = createStore(\r\n   reducers,\r\n   composeEnhancers(applyMiddleware(thunkMiddleware))\r\n\r\n);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import state, { subscribe } from './redux/state';\n\nimport store from './redux/redux-store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n\n   <BrowserRouter>\n      <Provider store={store}>\n         <App\n         />\n      </Provider>\n   </BrowserRouter>,\n   document.getElementById('root')\n);\n\n\n// let rerenderEntireTree = (state) => {}\n\n// rerenderEntireTree();\n// store.subscribe(() => {\n//    rerenderEntireTree();\n// });\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formsControls\":\"FormsControls_formsControls__2ab_a\",\"error\":\"FormsControls_error__1e9W5\",\"summaryError\":\"FormsControls_summaryError__1znot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"left_sidebar\":\"LeftSidebar_left_sidebar__1vf-P\",\"nav\":\"LeftSidebar_nav__1P_T5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Textarea_button__3Kg5o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"paginator_selectedPage__3iT1N\",\"countWrapper\":\"paginator_countWrapper__9VoyU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"User_wrapper__1F2lA\",\"img\":\"User_img__3V-lG\"};"],"sourceRoot":""}